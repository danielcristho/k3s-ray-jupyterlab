hub:
  config:

    JupyterHub:
      # testing only - do not do this for production
      authenticator_class: dummy
      shutdown_on_logout: true
      bind_url: http://:8081
      # cookie_domain: "localhost"
    KubeSpawner:
      k8s_api_request_timeout: 60
      start_timeout: 300
      http_timeout: 300
    Authenticator:
      admin_users:
        - admin
    ConfigurableHTTPProxy:
      api_url: http://proxy-api:8001
  extraEnv:
    CONFIGPROXY_AUTH_TOKEN: "c413fe27d65c5916b7cf4028bf49a19b3056d59f2c2d1e79349244a6f758babe"
    JUPYTERHUB_PROXY_API_URL: http://proxy-api:8001
    JUPYTERHUB_LOG_LEVEL: DEBUG
  nodeSelector:
    kubernetes.io/hostname: rpl
  db:
    url: sqlite:////data/jupyterhub.sqlite
  extraVolumes:
    - name: jupyterhub-db
      persistentVolumeClaim:
        claimName: jupyterhub-pvc
  extraVolumeMounts:
    - name: jupyterhub-db
      mountPath: /data
  resources:
    requests:
      memory: "3G"
      cpu: "1"
    limits:
      memory: "4G"
      cpu: "2"
  livenessProbe:
    httpGet:
      path: /hub/health
      port: 8081
    initialDelaySeconds: 240
    periodSeconds: 20
    timeoutSeconds: 5
    failureThreshold: 10
  readinessProbe:
    httpGet:
      path: /hub/health
      port: 8081
    initialDelaySeconds: 120
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
  networkPolicy:
    enabled: false

proxy:
  secretToken: "c413fe27d65c5916b7cf4028bf49a19b3056d59f2c2d1e79349244a6f758babe"
  https:
    enabled: false
  service:
    type: ClusterIP
  chp:
    extraCommandLineFlags:
      - --port=8000
      - --api-port=8001
    extraEnv:
      CONFIGPROXY_API_PORT: "8001"
    # extraPodSpec: {}
    nodeSelector:
      kubernetes.io/hostname: rpl
    resources:
      requests:
        memory: "256M"
        cpu: "0.2"
      limits:
        memory: "512M"
        cpu: "0.5"

scheduling:
  userScheduler:
    enabled: true
    nodeSelector:
      kubernetes.io/hostname: rpl

singleuser:
  defaultUrl: "/lab"
  storage:
    capacity: 1Gi
    dynamic:
      pvcNameTemplate: claim-{username}
      storageAccessModes: ["ReadWriteOnce"]
  memory:
    guarantee: 512M
    limit: 1G
  cpu:
    guarantee: 0.5
    limit: 1
  profileList:
    - display_name: "CPU Server"
      description: "Node worker biasa"
      kubespawner_override:
        image: danielcristh0/jupyterlab:1.1
        cpu_limit: 2
        mem_limit: 4G
        cpu_guarantee: 2
        mem_guarantee: 4G
        node_selector:
          kubernetes.io/hostname: rpl
    - display_name: "GPU Server"
      description: "Jalankan di node head dengan GPU"
      kubespawner_override:
        image: danielcristh0/jupyterlab:rpl
        cpu_limit: 4
        mem_limit: 8G
        cpu_guarantee: 2
        mem_guarantee: 4G
        extra_resource_limits:
          nvidia.com/gpu: "1" # TIME-SLICING: Use a slice of GPU using time-slicing mode
        node_selector:
          kubernetes.io/hostname: rpl

prePuller:
  hook:
    enabled: false
  continuous:
    enabled: false

cull:
  enabled: true
  timeout: 1800
  every: 60
  maxAge: 0
  users: false
  removeNamedServers: false
